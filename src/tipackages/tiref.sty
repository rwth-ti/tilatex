\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{tiref}[2014/10/22 v0.1]

\usepackage{tiinternal}

\usepackage[colorlinks=true]{hyperref}
\usepackage{ifthen}
\usepackage{xstring}
\usepackage{xparse}

% Internal macros
\newcommand*{\tiref@ifempty}[3]{\ifthenelse{\equal{#1}{}}{#2}{#3}}

\newcommand{\tiref@tiref}[1]{%
    \StrCut{#1}{/}{\tiref@basename}{\tiref@itemname}%
    \tiref@ifempty{\tiref@itemname}{%
        \ref{#1}%
    }{%
        % Use the starred version of \ref in the second argument to `hyperref`
        % so the package doesn't create links to both the basename and the
        % actual target.
        \hyperref[#1]{\ref*{\tiref@basename}\ref*{#1}}%
    }%
}

% Macro to define reference names. This allows linking prefixes like `prop:`
% in label names like `prop:foo` to strings like `Proposition`.
\newcommand{\definereftype}[2]{%
    \expandafter\def\csname tiref@refname#1\endcsname{#2}%
}

% Macro to define the equation domain prefix. It is used differentiate regular
% references from references to equations so we can add round brackets around
% the latter.
\def\tiref@eqnprefix{eqn}
\newcommand{\setequationprefix}[1]{%
    \def\tiref@eqnprefix{#1}%
}

% The main reference macro. It accepts labels of the form `foo:bar/baz` where
% `foo` denotes the (optional) reference domain like Theorem, Example, etc.,
% `bar` denotes the main label, and `baz` denotes the (optional) item label.
% The macro also accepts an optional argument to overwrite the reference type
% name associated with `foo` as defined by `\definereftype`. Furthermore, a
% starred version of the macro is available which ignores the domain prefix
% altogether.
\DeclareDocumentCommand{\tiref}{s o m}{%
    \StrCut{#3}{:}{\tiref@domain}{\tiref@refname}%
    \text{%
        \IfBooleanF{#1}{%
            \IfNoValueTF{#2}{%
                \tiref@ifempty{\tiref@refname}{}{%
                    \ifcsname tiref@refname\tiref@domain\endcsname%
                        \csname tiref@refname\tiref@domain\endcsname%
                    \else%
                        \textbf{??}%
                    \fi~%
                }%
            }{%
                #2~%
            }%
        }%
        \IfStrEq{\tiref@domain}{\tiref@eqnprefix}{%
            \eqref{#3}%
        }{%
            \tiref@tiref{#3}%
        }%
    }%
}

\endinput

