% Copyright (c) 2014 Institute for Theoretical Information Technology,
%                    RWTH Aachen University
%
% This software may be modified and distributed under the terms of the MIT
% license. See the LICENSE file for details.

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{tienv}[2014/10/22 v0.1]

\usepackage{tiinternal}

\usepackage{enumitem}
\usepackage{amsthm}
\usepackage{xparse}

% Language options
\def\tienv@corollarylabel{Korollar}
\def\tienv@examplelabel{Beispiel}
\DeclareOption{english}{
    % The other labels don't require translation.
    \def\tienv@corollarylabel{Corollary}
    \def\tienv@examplelabel{Example}
}

% Define the environments.
\theoremstyle{definition}
\ifx\thesection\undefined
    \relax
\else
    \newtheorem{tienv@theorem}{Theorem}[section]
    \newtheorem{tienv@lemma}[tienv@theorem]{Lemma}
    \newtheorem{tienv@proposition}[tienv@theorem]{Proposition}
    \newtheorem{tienv@corollary}[tienv@theorem]{\tienv@corollarylabel}
    \newtheorem{tienv@definition}[tienv@theorem]{Definition}
    \newtheorem{tienv@example}[tienv@theorem]{\tienv@examplelabel}

    % Command to define a wrapper environment for the hidden ones defined above.
    % We use it to be able to control the placement and style of optional arguments
    % to amsthm environments.
    \newcommand*{\defineenvironment}[1]{%
        \DeclareDocumentEnvironment{#1}{o}{%
            \IfNoValueTF{##1}{%
                \begin{tienv@#1}%
            }{%
                \begin{tienv@#1}(\textit{##1})%
            }
        }{%
            \end{tienv@#1}%
        }
    }
    \defineenvironment{theorem}
    \defineenvironment{lemma}
    \defineenvironment{proposition}
    \defineenvironment{corollary}
    \defineenvironment{definition}
    \defineenvironment{example}
\fi

\ProcessOptions\relax

% Define enumref environment with bold \ref'able labels a), b), c), etc.
\newlist{enumref}{enumerate}{1}
\setlist[enumref]{label=\textbf{\alph*)}}

% Define enumeratea environment with item labels 1., 2., etc.
\newlist{enumeratea}{enumerate}{1}
\setlist[enumeratea]{label=\arabic*.}

% Define enumeratei environment with roman numerals (i), (ii), etc.
\newlist{enumeratei}{enumerate}{1}
\setlist[enumeratei]{label=(\roman*)}

% Define enumerateal environment with item labels a), b), etc.
\newlist{enumerateal}{enumerate}{1}
\setlist[enumerateal]{label=\alph*)}

% Define enumeratenl environment for lists without labels.
\newlist{enumeratenl}{enumerate}{1}
\setlist[enumeratenl]{label=}

\endinput

